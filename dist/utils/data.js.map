{"version":3,"sources":["../../src/utils/data.js"],"names":["getHostTags","target","hostTags","i","formatCurveData","startTime","step","formatString","site","host","service","rrddata","title","datapoints","map","d","filter","f","replace"],"mappings":";;;;;AAAA,IAAMA,cAAc,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5B,QAAMC,WAAW,EAAjB;;AAEA,SAAI,IAAIC,IAAI,CAAZ,EAAeA,KAAK,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,YAAGF,kBAAgBE,CAAhB,eAA6B,IAA7B,IAAqCF,kBAAgBE,CAAhB,eAA6B,EAArE,EAAyE;AACrED,mCAAqBC,CAArB,aAAgCF,kBAAgBE,CAAhB,WAAhC;AACAD,mCAAqBC,CAArB,YAA+BF,kBAAgBE,CAAhB,QAA/B;AACAD,mCAAqBC,CAArB,aAAgCF,kBAAgBE,CAAhB,WAAhC;AACH;AACJ;;AAED,WAAOD,QAAP;AACH,CAZD;;AAcA,IAAME,kBAAkB,SAAlBA,eAAkB,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,YAAlB;AAAA,QAAiCC,IAAjC,QAAiCA,IAAjC;AAAA,QAAuCC,IAAvC,QAAuCA,IAAvC;AAAA,QAA6CC,OAA7C,QAA6CA,OAA7C;AAAA,WAA0D,iBAAsB;AAAA,YAApBC,OAAoB,SAApBA,OAAoB;AAAA,YAAXC,KAAW,SAAXA,KAAW;;AACpG,YAAMC,aAAaF,QACdG,GADc,CACV,UAACC,CAAD,EAAIZ,CAAJ;AAAA,mBAAU,CAACY,CAAD,EAAI,CAACV,YAAYF,IAAIG,IAAjB,IAAyB,IAA7B,CAAV;AAAA,SADU,EAEdU,MAFc,CAEP,UAACC,CAAD;AAAA,mBAAOA,EAAE,CAAF,KAAQA,EAAE,CAAF,MAAS,CAAxB;AAAA,SAFO,CAAnB;;AAIAV,uBAAeA,gBAAgB,QAA/B;;AAEA,YAAMN,SAASM,aACVW,OADU,CACF,QADE,EACQN,KADR,EAEVM,OAFU,CAEF,OAFE,EAEOV,QAAQ,EAFf,EAGVU,OAHU,CAGF,OAHE,EAGOT,QAAQ,EAHf,EAIVS,OAJU,CAIF,UAJE,EAIUR,WAAW,EAJrB,CAAf;;AAMA,eAAO;AACHT,0BADG;AAEHY;AAFG,SAAP;AAIH,KAjBuB;AAAA,CAAxB;;QAoBIb,W,GAAAA,W;QACAI,e,GAAAA,e","file":"data.js","sourcesContent":["const getHostTags = (target) => {\n    const hostTags = {};\n\n    for(let i = 0; i <= 2; i++) {\n        if(target[`filter${i}value`] != null && target[`filter${i}value`] != '') {\n            hostTags[`host_tag_${i}_grp`] = target[`filter${i}group`];\n            hostTags[`host_tag_${i}_op`] = target[`filter${i}op`];\n            hostTags[`host_tag_${i}_val`] = target[`filter${i}value`];\n        }\n    }\n\n    return hostTags;\n};\n\nconst formatCurveData = (startTime, step, formatString, {site, host, service}) => ({rrddata, title}) => {\n    const datapoints = rrddata\n        .map((d, i) => [d, (startTime + i * step) * 1000])\n        .filter((f) => f[0] || f[0] === 0 );\n\n    formatString = formatString || '$title';\n\n    const target = formatString\n        .replace('$title', title)\n        .replace('$site', site || '')\n        .replace('$host', host || '')\n        .replace('$service', service || '');\n\n    return {\n        target,\n        datapoints\n    };\n};\n\nexport {\n    getHostTags,\n    formatCurveData\n};\n"]}