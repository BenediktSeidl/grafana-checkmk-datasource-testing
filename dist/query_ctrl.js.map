{"version":3,"sources":["../src/query_ctrl.js"],"names":["CheckmkDatasourceQueryCtrl","$scope","$injector","scope","target","site","host","hostregex","service","serviceregex","mode","metric","graph","presentation","combinedgraph","format","filter0group","filter1group","filter2group","filter0op","filter1op","filter2op","filter0value","filter1value","filter2value","datasource","sitesQuery","hostsQuery","servicesQuery","metricsQuery","graphsQuery","combinedGraphsQuery","filterGroupQuery","value","text","index","filterValueQuery","getLastError","refId","rawQuery","resetFilter","resetGraph","resetService","resetHost","update","usehostregex","resetFilters","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAET,wCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,4JACtBD,MADsB,EACdC,SADc;;AAG5B,cAAKC,KAAL,GAAaF,MAAb;;AAEA,cAAKG,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,EAAvC;AACA,cAAKD,MAAL,CAAYE,IAAZ,GAAmB,MAAKF,MAAL,CAAYE,IAAZ,IAAoB,EAAvC;AACA,cAAKF,MAAL,CAAYG,SAAZ,GAAwB,MAAKH,MAAL,CAAYG,SAAZ,IAAyB,EAAjD;AACA,cAAKH,MAAL,CAAYI,OAAZ,GAAsB,MAAKJ,MAAL,CAAYI,OAAZ,IAAuB,EAA7C;AACA,cAAKJ,MAAL,CAAYK,YAAZ,GAA2B,MAAKL,MAAL,CAAYK,YAAZ,IAA4B,EAAvD;AACA,cAAKL,MAAL,CAAYM,IAAZ,GAAmB,MAAKN,MAAL,CAAYM,IAAZ,IAAoB,OAAvC;AACA,cAAKN,MAAL,CAAYO,MAAZ,GAAqB,MAAKP,MAAL,CAAYO,MAAZ,IAAsB,IAAtB,GAA6B,MAAKP,MAAL,CAAYO,MAAzC,GAAkD,EAAvE;AACA,cAAKP,MAAL,CAAYQ,KAAZ,GAAoB,MAAKR,MAAL,CAAYQ,KAAZ,IAAqB,IAArB,GAA4B,MAAKR,MAAL,CAAYQ,KAAxC,GAAgD,EAApE;AACA,cAAKR,MAAL,CAAYS,YAAZ,GAA2B,MAAKT,MAAL,CAAYS,YAAZ,IAA4B,IAA5B,GAAmC,MAAKT,MAAL,CAAYS,YAA/C,GAA8D,EAAzF;AACA,cAAKT,MAAL,CAAYU,aAAZ,GAA4B,MAAKV,MAAL,CAAYU,aAAZ,IAA6B,IAA7B,GAAoC,MAAKV,MAAL,CAAYU,aAAhD,GAAgE,EAA5F;AACA,cAAKV,MAAL,CAAYW,MAAZ,GAAqB,MAAKX,MAAL,CAAYW,MAAZ,IAAsB,QAA3C;;AAEA,cAAKX,MAAL,CAAYY,YAAZ,GAA2B,MAAKZ,MAAL,CAAYY,YAAZ,IAA4B,EAAvD;AACA,cAAKZ,MAAL,CAAYa,YAAZ,GAA2B,MAAKb,MAAL,CAAYa,YAAZ,IAA4B,EAAvD;AACA,cAAKb,MAAL,CAAYc,YAAZ,GAA2B,MAAKd,MAAL,CAAYc,YAAZ,IAA4B,EAAvD;;AAEA,cAAKd,MAAL,CAAYe,SAAZ,GAAwB,MAAKf,MAAL,CAAYe,SAAZ,IAAyB,IAAjD;AACA,cAAKf,MAAL,CAAYgB,SAAZ,GAAwB,MAAKhB,MAAL,CAAYgB,SAAZ,IAAyB,IAAjD;AACA,cAAKhB,MAAL,CAAYiB,SAAZ,GAAwB,MAAKjB,MAAL,CAAYiB,SAAZ,IAAyB,IAAjD;;AAEA,cAAKjB,MAAL,CAAYkB,YAAZ,GAA2B,MAAKlB,MAAL,CAAYkB,YAAZ,IAA4B,EAAvD;AACA,cAAKlB,MAAL,CAAYmB,YAAZ,GAA2B,MAAKnB,MAAL,CAAYmB,YAAZ,IAA4B,EAAvD;AACA,cAAKnB,MAAL,CAAYoB,YAAZ,GAA2B,MAAKpB,MAAL,CAAYoB,YAAZ,IAA4B,EAAvD;AA3B4B;AA4B/B;;;;yCAEgB;AACb,mBAAO,KAAKC,UAAL,CAAgBC,UAAhB,CAA2B,KAAKtB,MAAhC,CAAP;AACH;;;yCAEgB;AACb,mBAAO,KAAKqB,UAAL,CAAgBE,UAAhB,CAA2B,KAAKvB,MAAhC,CAAP;AACH;;;4CAEmB;AAChB,mBAAO,KAAKqB,UAAL,CAAgBG,aAAhB,CAA8B,KAAKxB,MAAnC,EAA2C,IAA3C,CAAP;AACH;;;2CAEkB;AACf,mBAAO,KAAKqB,UAAL,CAAgBI,YAAhB,CAA6B,KAAKzB,MAAlC,CAAP;AACH;;;0CAEiB;AACd,mBAAO,KAAKqB,UAAL,CAAgBK,WAAhB,CAA4B,KAAK1B,MAAjC,CAAP;AACH;;;kDAEyB;AACtB,mBAAO,KAAKqB,UAAL,CAAgBM,mBAAhB,CAAoC,KAAK3B,MAAzC,CAAP;AACH;;;gDAEuB;AACpB,mBAAO,KAAKqB,UAAL,CAAgBO,gBAAhB,CAAiC,KAAK5B,MAAtC,CAAP;AACH;;;oDAE2B;AACxB,mBAAO,CACH,EAAC6B,OAAO,IAAR,EAAiBC,MAAM,IAAvB,EADG,EAEH,EAACD,OAAO,OAAR,EAAiBC,MAAM,QAAvB,EAFG,CAAP;AAIH;;;8CAEqBC,K,EAAO;AACzB,mBAAO,KAAKV,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKhC,MAAtC,EAA8C+B,KAA9C,CAAP;AACH;;;iDAEwB;AACrB,mBAAO,CACH,EAACF,OAAO,OAAR,EAAmBC,MAAM,OAAzB,EADG,EAEH,EAACD,OAAO,SAAR,EAAmBC,MAAM,SAAzB,EAFG,EAGH,EAACD,OAAO,KAAR,EAAmBC,MAAM,KAAzB,EAHG,EAIH,EAACD,OAAO,SAAR,EAAmBC,MAAM,SAAzB,EAJG,EAKH,EAACD,OAAO,KAAR,EAAmBC,MAAM,SAAzB,EALG,EAMH,EAACD,OAAO,KAAR,EAAmBC,MAAM,SAAzB,EANG,CAAP;AAQH;;;yCAEgB;AACb,mBAAO,CACH,EAACA,MAAM,kBAAP,EAA2BD,OAAO,OAAlC,EADG,EAEH,EAACC,MAAM,eAAP,EAAwBD,OAAO,QAA/B,EAFG,EAGH,EAACC,MAAM,gBAAP,EAAyBD,OAAO,UAAhC,EAHG,CAAP;AAKH;;;uCAEc;AACX,mBAAO,KAAKR,UAAL,CAAgBY,YAAhB,CAA6B,KAAKjC,MAAL,CAAYkC,KAAzC,CAAP;AACH;;;2CAEkB;AACf,iBAAKlC,MAAL,CAAYmC,QAAZ,GAAuB,CAAC,KAAKnC,MAAL,CAAYmC,QAApC;AACH;;;2CAEkB;AACf,mBAAO,yBAAa,KAAKnC,MAAL,CAAYG,SAAzB,CAAP;AACH;;;8CAEqB;AAClB,mBAAO,yBAAa,KAAKH,MAAL,CAAYK,YAAzB,CAAP;AACH;;;qCAEY;AACT,iBAAKL,MAAL,CAAYO,MAAZ,GAAqB,EAArB;AACA,iBAAKP,MAAL,CAAYQ,KAAZ,GAAoB,EAApB;AACA,iBAAKR,MAAL,CAAYU,aAAZ,GAA4B,EAA5B;AACA,iBAAKV,MAAL,CAAYS,YAAZ,GAA2B,EAA3B;;AAEA,mBAAO,IAAP;AACH;;;oCAEWsB,K,EAAO;AACf,mBAAMA,QAAQ,CAAd,EAAiB;AACb;AACA,qBAAK/B,MAAL,YAAqB+B,KAArB,cAAqC,KAAK/B,MAAL,aAAqB+B,QAAQ,CAA7B,YAArC;AACA,qBAAK/B,MAAL,YAAqB+B,KAArB,WAAkC,KAAK/B,MAAL,aAAqB+B,QAAQ,CAA7B,SAAlC;AACA,qBAAK/B,MAAL,YAAqB+B,KAArB,cAAqC,KAAK/B,MAAL,aAAqB+B,QAAQ,CAA7B,YAArC;AACAA;AACH;AACD,iBAAK/B,MAAL,CAAYc,YAAZ,GAA2B,EAA3B;AACA,iBAAKd,MAAL,CAAYiB,SAAZ,GAAwB,IAAxB;AACA,iBAAKjB,MAAL,CAAYoB,YAAZ,GAA2B,EAA3B;;AAEA,mBAAO,IAAP;AACH;;;uCAEc;AACX,iBAAKgB,WAAL,CAAiB,CAAjB,EACKA,WADL,CACiB,CADjB,EAEKA,WAFL,CAEiB,CAFjB;;AAIA,mBAAO,IAAP;AACH;;;uCAEc;AACX,iBAAKpC,MAAL,CAAYI,OAAZ,GAAsB,EAAtB;AACA,mBAAO,KAAKiC,UAAL,EAAP;AACH;;;oCAEW;AACR,iBAAKrC,MAAL,CAAYE,IAAZ,GAAmB,EAAnB;AACA,mBAAO,KAAKoC,YAAL,EAAP;AACH;;;uCAEc;AACX,iBAAKC,SAAL,GACKC,MADL;AAEH;;;uCAEc;AACX,iBAAKF,YAAL,GACKE,MADL;AAEH;;;4CAEmB;AAChB,iBAAKF,YAAL,GACKE,MADL;AAEH;;;0CAEiB;AACd,iBAAKH,UAAL,GACKG,MADL;AAEH;;;+CAEsB;AACnB,iBAAKH,UAAL,GACKG,MADL;AAEH;;;yCAEgB;AACb,iBAAKA,MAAL;AACH;;;4CAEmBT,K,EAAO;AACvB,iBAAK/B,MAAL,YAAqB+B,KAArB,WAAkC,IAAlC;AACA,iBAAK/B,MAAL,YAAqB+B,KAArB,cAAqC,EAArC;AACA,iBAAKS,MAAL;AACH;;;yCAEgB;AACb,iBAAKA,MAAL;AACH;;;+CAEsB;AACnB,iBAAKA,MAAL;AACH;;;wCAEe;AACZ,iBAAKA,MAAL;AACH;;;gDAEuB;AACpB,iBAAKA,MAAL;AACH;;;yCAEgB;AACb,iBAAKxC,MAAL,CAAYW,MAAZ,GAAqB,KAAKX,MAAL,CAAYW,MAAZ,IAAsB,QAA3C;AACA,iBAAK6B,MAAL;AACH;;;uCAEc;AACX,iBAAKxC,MAAL,CAAYyC,YAAZ,GAA2B,KAA3B;AACA,iBAAKF,SAAL,GACKF,UADL,GAEKK,YAFL,GAGKF,MAHL;AAIH;;;iCAEQ;AACL,iBAAKG,SAAL,CAAeC,OAAf,GADK,CACqB;AAC7B;;;;EAtN2CC,c;;AAyNhDjD,2BAA2BkD,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport {isValidRegex} from './utils/regex';\nimport './css/query-editor.css!';\n\nexport class CheckmkDatasourceQueryCtrl extends QueryCtrl {\n\n    constructor($scope, $injector)  {\n        super($scope, $injector);\n\n        this.scope = $scope;\n\n        this.target.site = this.target.site || '';\n        this.target.host = this.target.host || '';\n        this.target.hostregex = this.target.hostregex || '';\n        this.target.service = this.target.service || '';\n        this.target.serviceregex = this.target.serviceregex || '';\n        this.target.mode = this.target.mode || 'graph';\n        this.target.metric = this.target.metric != null ? this.target.metric : '';\n        this.target.graph = this.target.graph != null ? this.target.graph : '';\n        this.target.presentation = this.target.presentation != null ? this.target.presentation : '';\n        this.target.combinedgraph = this.target.combinedgraph != null ? this.target.combinedgraph : '';\n        this.target.format = this.target.format || '$title';\n\n        this.target.filter0group = this.target.filter0group || '';\n        this.target.filter1group = this.target.filter1group || '';\n        this.target.filter2group = this.target.filter2group || '';\n\n        this.target.filter0op = this.target.filter0op || 'is';\n        this.target.filter1op = this.target.filter1op || 'is';\n        this.target.filter2op = this.target.filter2op || 'is';\n\n        this.target.filter0value = this.target.filter0value || '';\n        this.target.filter1value = this.target.filter1value || '';\n        this.target.filter2value = this.target.filter2value || '';\n    }\n\n    getSiteOptions() {\n        return this.datasource.sitesQuery(this.target);\n    }\n\n    getHostOptions() {\n        return this.datasource.hostsQuery(this.target);\n    }\n\n    getServiceOptions() {\n        return this.datasource.servicesQuery(this.target, true);\n    }\n\n    getMetricOptions() {\n        return this.datasource.metricsQuery(this.target);\n    }\n\n    getGraphOptions() {\n        return this.datasource.graphsQuery(this.target);\n    }\n\n    getCombinedGraphOptions() {\n        return this.datasource.combinedGraphsQuery(this.target);\n    }\n\n    getFilterGroupOptions() {\n        return this.datasource.filterGroupQuery(this.target);\n    }\n\n    getFilterOperationOptions() {\n        return [\n            {value: 'is',    text: 'is'},\n            {value: 'isnot', text: 'is not'}\n        ];\n    }\n\n    getFilterValueOptions(index) {\n        return this.datasource.filterValueQuery(this.target, index);\n    }\n\n    getPresentationOptions() {\n        return [\n            {value: 'lines',   text: 'Lines'},\n            {value: 'stacked', text: 'Stacked'},\n            {value: 'sum',     text: 'Sum'},\n            {value: 'average', text: 'Average'},\n            {value: 'min',     text: 'Minimum'},\n            {value: 'max',     text: 'Maximum'}\n        ];\n    }\n\n    getModeOptions() {\n        return [\n            {text: 'predefined graph', value: 'graph'},\n            {text: 'single metric', value: 'metric'},\n            {text: 'combined graph', value: 'combined'}\n        ];\n    }\n\n    getLastError() {\n        return this.datasource.getLastError(this.target.refId);\n    }\n\n    toggleEditorMode() {\n        this.target.rawQuery = !this.target.rawQuery;\n    }\n\n    isHostRegexValid() {\n        return isValidRegex(this.target.hostregex);\n    }\n\n    isServiceRegexValid() {\n        return isValidRegex(this.target.serviceregex);\n    }\n\n    resetGraph() {\n        this.target.metric = '';\n        this.target.graph = '';\n        this.target.combinedgraph = '';\n        this.target.presentation = '';\n\n        return this;\n    }\n\n    resetFilter(index) {\n        while(index < 2) {\n            // move filters down by one\n            this.target[`filter${index}group`] = this.target[`filter${index + 1}group`];\n            this.target[`filter${index}op`] = this.target[`filter${index + 1}op`];\n            this.target[`filter${index}value`] = this.target[`filter${index + 1}value`];\n            index++;\n        }\n        this.target.filter2group = '';\n        this.target.filter2op = 'is';\n        this.target.filter2value = '';\n\n        return this;\n    }\n\n    resetFilters() {\n        this.resetFilter(0)\n            .resetFilter(1)\n            .resetFilter(2);\n\n        return this;\n    }\n\n    resetService() {\n        this.target.service = '';\n        return this.resetGraph();\n    }\n\n    resetHost() {\n        this.target.host = '';\n        return this.resetService();\n    }\n\n    onSiteChange() {\n        this.resetHost()\n            .update();\n    }\n\n    onHostChange() {\n        this.resetService()\n            .update();\n    }\n\n    onHostRegexChange() {\n        this.resetService()\n            .update();\n    }\n\n    onServiceChange() {\n        this.resetGraph()\n            .update();\n    }\n\n    onServiceRegexChange() {\n        this.resetGraph()\n            .update();\n    }\n\n    onMetricChange() {\n        this.update();\n    }\n\n    onFilterGroupChange(index) {\n        this.target[`filter${index}op`] = 'is';\n        this.target[`filter${index}value`] = '';\n        this.update();\n    }\n\n    onFilterChange() {\n        this.update();\n    }\n\n    onPresentationChange() {\n        this.update();\n    }\n\n    onGraphChange() {\n        this.update();\n    }\n\n    onCombinedGraphChange() {\n        this.update();\n    }\n\n    onFormatChange() {\n        this.target.format = this.target.format || '$title';\n        this.update();\n    }\n\n    onModeChange() {\n        this.target.usehostregex = false;\n        this.resetHost()\n            .resetGraph()\n            .resetFilters()\n            .update();\n    }\n\n    update() {\n        this.panelCtrl.refresh(); // Asks the panel to refresh data.\n    }\n}\n\nCheckmkDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}